querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
querystring{                                                                                                                                                                                                                                                                                                                                          querystring{
      querystring从字面上的意思就是查询字符串，一般是对http请求所带的数据进行解析。
      这4个方法分别是querystring.parse和querystring.stringify和querystring.escape和querystring.unescape。
       使用方法：  首先使用querystring模块之前，需要require进来：const querystring = require("querystring");
                          其次，就可以使用模块下的方法了：querystring.parse(str,separator,eq,options)
      parse这个方法是将一个字符串反序列化为一个对象
      stringify这个方法是将一个对象序列化成一个字符串，与querystring.parse相对。
      escape可使传入的字符串进行编码。
      unescape方法可将含有%的字符串进行解码
}
exports{
        作用：导出对象，将模块中需要共享给其它模块的数据暴露到引用入出。
         语法：exports.属性名=值   exports.方法名=函数
         exports是module.exports对象的引用方式（===）
         exports是 module.exports的引用不能改指向，只能添加属性和方法
}
模块  module{
       作用域：模块作用域（每一个js都是一个独立的模块）
       抛出，暴露10:32 2019/10/29999999999999 
}
exports和module的区别{
    1两者默认都是空对象
    2exports是指向module.exportsd的引用
}
什么是面向对象：属性和方法的无序集合
node-modules项目依赖
npm(包管理){
npm login  登录npm
npm  publish  推送包
npm  int  项目初始化 
npm   install   下载
npm  install 包名称
   ---save=S（把项目依赖包下载到生产环境中）
 什么是生产环境（线上运行的环境）
     --save--dev -=D	把项目依赖包下载到开发环境
nmp   uninstall   卸载
cnpm 淘宝镜像
上传图片：formidable
}
stream{

什么是流：它是一个抽象接口，有起点和终点处理数据的过程 
为什么使用stream：
streamd的流转过程
streamd的应用
